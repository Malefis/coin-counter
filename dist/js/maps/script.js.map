{"version":3,"sources":["script.js"],"names":["balanceOutput","document","getElementById","onePence","twoPence","fivePence","tenPence","twentyPence","fiftyPence","onePound","twoPounds","getCoins","fetch","then","res","json","data","worth","i","length","amount","coinstarRound","toFixed","innerHTML","classList","add"],"mappings":"AAAA,MAAMA,cAAgBC,SAASC,eAAe,WACxCC,SAAWF,SAASC,eAAe,MACnCE,SAAWH,SAASC,eAAe,MACnCG,UAAYJ,SAASC,eAAe,MACpCI,SAAWL,SAASC,eAAe,OACnCK,YAAcN,SAASC,eAAe,OACtCM,WAAaP,SAASC,eAAe,OACrCO,SAAWR,SAASC,eAAe,UACnCQ,UAAYT,SAASC,eAAe,UAG1C,SAASS,WACLC,MAAM,gDACLC,KAAMC,GAAQA,EAAIC,QAClBF,KAAMG,IACH,IAAIC,EAAQ,EACZ,IAAIC,EAAI,EAAGA,EAAIF,EAAKG,OAAQD,IACxBD,GAASD,EAAKE,GAAGD,MAAQD,EAAKE,GAAGE,OAErC,IACIC,GADWJ,EAAiB,KAARA,GACKK,QAAQ,GACrCtB,cAAcuB,kBAAoBN,QAClCjB,cAAcuB,kCAAoCF,QAClDlB,SAASoB,8BAAgCP,EAAK,GAAGI,oBAAoBJ,EAAK,GAAGI,OAASJ,EAAK,GAAGC,YAC9Fb,SAASmB,8BAAgCP,EAAK,GAAGI,oBAAoBJ,EAAK,GAAGI,OAASJ,EAAK,GAAGC,YAC9FZ,UAAUkB,8BAAgCP,EAAK,GAAGI,oBAAoBJ,EAAK,GAAGI,OAASJ,EAAK,GAAGC,YAC/FX,SAASiB,+BAAiCP,EAAK,GAAGI,qBAAqBJ,EAAK,GAAGI,OAASJ,EAAK,GAAGC,OAAOK,QAAQ,SAC/Gf,YAAYgB,+BAAiCP,EAAK,GAAGI,qBAAqBJ,EAAK,GAAGI,OAASJ,EAAK,GAAGC,OAAOK,QAAQ,SAClHd,WAAWe,+BAAiCP,EAAK,GAAGI,oBAAoBJ,EAAK,GAAGI,OAASJ,EAAK,GAAGC,YACjGR,SAASc,8BAAgCP,EAAK,GAAGI,oBAAoBJ,EAAK,GAAGI,OAASJ,EAAK,GAAGC,YAC9FP,UAAUa,8BAAgCP,EAAK,GAAGI,oBAAoBJ,EAAK,GAAGI,OAASJ,EAAK,GAAGC,YAE5FD,EAAK,GAAGC,MAAQD,EAAK,GAAGI,OAASJ,EAAK,GAAGC,MAAQD,EAAK,GAAGI,QAAW,IACrEjB,SAASqB,UAAUC,IAAI,sBACvBrB,SAASoB,UAAUC,IAAI,uBAEtBT,EAAK,GAAGC,MAAQD,EAAK,GAAGI,QAAU,GACnCf,UAAUmB,UAAUC,IAAI,sBAEvBT,EAAK,GAAGC,MAAQD,EAAK,GAAGI,QAAU,GACnCd,SAASkB,UAAUC,IAAI,sBAEtBT,EAAK,GAAGC,MAAQD,EAAK,GAAGI,QAAS,IAClCb,YAAYiB,UAAUC,IAAI,sBAEzBT,EAAK,GAAGC,MAAQD,EAAK,GAAGI,QAAU,IACnCZ,WAAWgB,UAAUC,IAAI,sBAExBT,EAAK,GAAGC,MAAQD,EAAK,GAAGI,QAAU,IACnCX,SAASe,UAAUC,IAAI,sBAEtBT,EAAK,GAAGC,MAAQD,EAAK,GAAGI,QAAU,IACnCV,UAAUc,UAAUC,IAAI,wBAIlCd","file":"../script.js","sourcesContent":["const balanceOutput = document.getElementById('balance');\r\nconst onePence = document.getElementById('1p');\r\nconst twoPence = document.getElementById('2p');\r\nconst fivePence = document.getElementById('5p');\r\nconst tenPence = document.getElementById('10p');\r\nconst twentyPence = document.getElementById('20p');\r\nconst fiftyPence = document.getElementById('50p');\r\nconst onePound = document.getElementById('1pound');\r\nconst twoPounds = document.getElementById('2pound');\r\n\r\n\r\nfunction getCoins(){\r\n    fetch('https://coin-counter.herokuapp.com/api/coins')\r\n    .then((res) => res.json())\r\n    .then((data) => {\r\n        var worth = 0\r\n        for(i = 0; i < data.length; i++){\r\n            worth += data[i].worth * data[i].amount;\r\n        }\r\n        var coinstar = worth - (worth * 0.119);\r\n        var coinstarRound = coinstar.toFixed(2);\r\n        balanceOutput.innerHTML += `<p>£${worth}</p>`;\r\n        balanceOutput.innerHTML += `<p>Coinstar Value: £${coinstarRound}</p>`;\r\n        onePence.innerHTML += `<p>1p | Amount: ${data[0].amount} , Worth: £${data[0].amount * data[0].worth}</p>`\r\n        twoPence.innerHTML += `<p>2p | Amount: ${data[1].amount} , Worth: £${data[1].amount * data[1].worth}</p>`\r\n        fivePence.innerHTML += `<p>5p | Amount: ${data[2].amount} , Worth: £${data[2].amount * data[2].worth}</p>`\r\n        tenPence.innerHTML += `<p>10p | Amount: ${data[3].amount} , Worth: £${(data[3].amount * data[3].worth).toFixed(2)}</p>`\r\n        twentyPence.innerHTML += `<p>20p | Amount: ${data[4].amount} , Worth: £${(data[4].amount * data[4].worth).toFixed(2)}</p>`\r\n        fiftyPence.innerHTML += `<p>50p | Amount: ${data[5].amount} , Worth: £${data[5].amount * data[5].worth}</p>`\r\n        onePound.innerHTML += `<p>£1 | Amount: ${data[6].amount} , Worth: £${data[6].amount * data[6].worth}</p>`\r\n        twoPounds.innerHTML += `<p>£2 | Amount: ${data[7].amount} , Worth: £${data[7].amount * data[7].worth}</p>`\r\n        //Change colour if amount is enough to give to bank\r\n        if(data[0].worth * data[0].amount + data[1].worth * data[1].amount  >= 1){\r\n          onePence.classList.add(\"coinOutputs--green\");\r\n          twoPence.classList.add(\"coinOutputs--green\");\r\n        }\r\n        if(data[2].worth * data[2].amount >= 5){\r\n          fivePence.classList.add(\"coinOutputs--green\");\r\n        }\r\n        if(data[3].worth * data[3].amount >= 5){\r\n          tenPence.classList.add(\"coinOutputs--green\");\r\n        }\r\n        if(data[4].worth * data[4].amount>= 10){\r\n          twentyPence.classList.add(\"coinOutputs--green\");\r\n        }\r\n        if(data[5].worth * data[5].amount >= 10){\r\n          fiftyPence.classList.add(\"coinOutputs--green\");\r\n        }\r\n        if(data[6].worth * data[6].amount >= 20){\r\n          onePound.classList.add(\"coinOutputs--green\");\r\n        }\r\n        if(data[7].worth * data[7].amount >= 20){\r\n          twoPounds.classList.add(\"coinOutputs--green\");\r\n        }\r\n    })\r\n}\r\ngetCoins();"]}